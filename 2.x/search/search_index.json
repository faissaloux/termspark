{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":""},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#unreleased","title":"Unreleased","text":""},{"location":"changelog/#v200-2024-06-15","title":"v2.0.0 - 2024-06-15","text":"<p>Please consult the upgrade guide in the official Termspark documentation.</p>"},{"location":"changelog/#added","title":"ADDED","text":"<ul> <li>Support more colors (#88) supported colors</li> </ul>"},{"location":"installation/","title":"Installation","text":"<p>Make sure you got the right python version.</p> <p></p> <pre><code>    pip install termspark\n</code></pre>"},{"location":"license/","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2022 Faissal Wahabali</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ASNY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"upgrading/","title":"Upgrading","text":""},{"location":"upgrading/#from-1x-to-2x","title":"From 1.x to 2.x","text":""},{"location":"upgrading/#renamed-colors","title":"Renamed colors","text":"<pre><code>-   bright white\n+   white\n</code></pre>"},{"location":"upgrading/#removed-colors","title":"Removed colors","text":"<pre><code>-   bright black\n-   bright red\n-   bright green\n-   bright yellow\n-   bright blue\n-   bright magenta\n-   bright cyan\n</code></pre>"},{"location":"upgrading/#changed-colors-degree","title":"Changed colors degree","text":"Color 1.x 2.x red green yellow blue magenta cyan white"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#print-but-more","title":"<code>print()</code>, but more!","text":"<p>Import Termspark's print and take advantage of all its features, colors, highlights, styles, hyperlinks and more ...</p> <p><pre><code>from termspark import print\n\nprint(\" Termspark \", \"white\", \"blue\", \"italic\")\nprint(\" [@termspark](https://github.com/faissaloux/termspark) \", \"black\", \"white\", \"italic, bold\")\n</code></pre> </p> <p>You can choose from <code>[\"left\", \"center\", \"right\"]</code> to specify where to print by passing it as position parameter: <code>print(\" Termspark \", position=\"center\")</code>.</p> <p>You can enable the Full Width using full_width parameter: <code>print(\" Termspark \", highlight=\"blue\", full_width=True)</code>.</p> <p>You can fill the empty space by a character using <code>print(separator=)</code>.</p> <p><pre><code>from termspark import print\n\nprint(\" TERMSPARK \", \"white\", \"green\", position=\"center\", separator=\"_\")\n</code></pre> </p>"},{"location":"usage/#input","title":"<code>input()</code>","text":"<p>input with colors, highlights, styles, and hyperlinks.</p> <p>With <code>input(position=)</code> you can specify position where to put your input text <code>[\"left\", \"center\", \"right\"]</code>. With <code>input(full_width=)</code> you can enable full width <code>True | False</code>.</p> <p><pre><code>from termspark import input\n\nname = input(\" What's your name? \", \"white\", \"blue\", \"italic\", \"center\", True)\n</code></pre> </p>"},{"location":"usage/#input-type","title":"Input Type","text":"<p>You can specify the input type by passing it to the <code>type=</code> parameter.</p> <p>For a calculation example, to pass the input value into a calculation you don't need to convert it to <code>int</code>  anymore, you just need to set it from <code>type</code> argument \ud83e\udd73 . <pre><code>from termspark import input\n\nbirthyear = input(\" Your year birth? \", \"white\", \"blue\", type=int)\nprint(f\"Your age is: {2023 - birthyear}\")\n</code></pre></p>"},{"location":"usage/#input-callback","title":"Input Callback","text":"<p>the <code>input()</code> supports callback too.</p> <p>If you need to pass the input value into some function before returning the result, you need to pass it into the <code>callback=</code> argument.</p> <pre><code>from termspark import input\n\ndef age_calc(birthyear, currentyear=2023):\n    return currentyear - birthyear\n\nage = input(\" Your year birth? \", \"white\", \"blue\", type=int, callback=age_calc)\nprint(f\"Your age is: {age}\")\n</code></pre> <p>You can use separator in <code>input(separator=)</code> too.</p> <p><pre><code>from termspark import input\n\nname = input(\" What's your name?\", \"white\", \"blue\", position=\"left\", separator=\".\")\n</code></pre> </p>"},{"location":"usage/#line","title":"<code>line()</code>","text":"<p>To print empty line use <code>line()</code>, you can leave it empty or fill it with a repeated character, you can specify its color too.</p> <p><pre><code>from termspark import line\n\nline(\".\", \"blue\")\nline(highlight=\"green\")\nline()\nline(\"-\")\n</code></pre> </p>"},{"location":"usage/#more-control","title":"More control","text":"<pre><code>    from termspark import TermSpark\n\n    TermSpark().print_right('RIGHT').spark()\n    TermSpark().spark_right('RIGHT').spark()\n    TermSpark().print_left('LEFT').spark()\n    TermSpark().spark_left('LEFT').spark()\n    TermSpark().print_center('CENTER').spark()\n    TermSpark().spark_center('CENTER').spark()\n    TermSpark().line('.').spark()\n\n    TermSpark().print_left('LEFT').print_right('RIGHT').set_separator('.').spark()\n    TermSpark().print_left('LEFT').print_center('CENTER').print_right('RIGHT').set_separator('.').spark()\n    TermSpark().spark_left('LEFT').spark_center('CENTER').spark_right('RIGHT').set_separator('.').spark()\n</code></pre> <p>[!NOTE] Separator can contain only one character.</p>"},{"location":"usage/#you-can-also-paint-your-content","title":"You can also paint your content","text":""},{"location":"usage/#text-color","title":"text color","text":"<pre><code>    from termspark import TermSpark\n\n    TermSpark().print_right('RIGHT', 'blue').spark()\n    TermSpark().print_left('LEFT', 'light red').spark()\n    TermSpark().print_center('CENTER', 'light_green').spark()\n</code></pre>"},{"location":"usage/#background-color","title":"background color","text":"<pre><code>    from termspark import TermSpark\n\n    TermSpark().print_right('RIGHT', None, 'light_magenta').spark()\n    TermSpark().print_left('LEFT', 'red', 'white').spark()\n    TermSpark().print_center('CENTER', 'white', 'light blue').spark()\n</code></pre>"},{"location":"usage/#you-can-use-different-styles-on-same-position","title":"You can use different styles on same position","text":"<p><pre><code>    from termspark import TermSpark\n\n    TermSpark().spark_left([' * ', 'gray', 'white'], [' Info ', 'white', 'blue']).spark()\n    TermSpark().spark_center([' * ', 'gray', 'white'], [' Warning ', 'white', 'yellow']).spark()\n    TermSpark().spark_right([' * ', 'gray', 'white'], [' Error ', 'white', 'red']).spark()\n</code></pre> <code>You know you can use them all together \ud83d\ude09</code></p>"},{"location":"usage/#lines-are-too-long-to-write-a-termspark-line","title":"Lines are too long to write a termspark line! \ud83d\ude11","text":"<pre><code>    from termspark import TermSpark\n\n    TermSpark().spark_left([' * ', 'gray', 'white'], [' Info ', 'white', 'blue']).spark_center([' * ', 'gray', 'white'], [' Warning ', 'white', 'yellow']).spark_right([' * ', 'gray', 'white'], [' Error ', 'white', 'red']).spark()\n</code></pre>"},{"location":"usage/#you-can-separate-them-by-calling-each-function-in-a-line","title":"You can separate them by calling each function in a line \ud83e\udd24","text":"<pre><code>    from termspark import TermSpark\n\n    termspark = TermSpark()\n    termspark.spark_left([' * ', 'gray', 'white'], [' Info ', 'white', 'blue'])\n    termspark.spark_center([' * ', 'gray', 'white'], [' Warning ', 'white', 'yellow'])\n    termspark.spark_right([' * ', 'gray', 'white'], [' Error ', 'white', 'red'])\n    termspark.spark()\n</code></pre>"},{"location":"usage/#still-too-long-got-you","title":"Still too long \ud83d\ude44 Got you \ud83e\udd29","text":"<pre><code>    from termspark import TermSpark\n\n    termspark = TermSpark()\n    termspark.spark_left([' * ', 'gray', 'white'])\n    termspark.spark_left(' Info ', 'white', 'blue')\n    termspark.spark_center([' * ', 'gray', 'white'])\n    termspark.spark_center([' Warning ', 'white', 'yellow'])\n    termspark.spark_right(' * ', 'gray', 'white')\n    termspark.spark_right([' Error ', 'white', 'red'])\n    termspark.spark()\n</code></pre>"},{"location":"usage/#raw","title":"Raw","text":"<p>You can print raw version which is colors-code-free so you can print clean text into files for example.</p> <pre><code>    from termspark import TermSpark\n\n    raw = TermSpark().print_left('LEFT').print_right('RIGHT').set_separator('.').raw()\n</code></pre>"},{"location":"usage/#force-width","title":"Force Width","text":"<p>You can customize width instead of the default full terminal width.</p> <pre><code>    from termspark import TermSpark\n\n    TermSpark().set_width(40).print_left(\"LEFT\", \"red\").print_right(\"RIGHT\", \"blue\").spark()\n</code></pre>"},{"location":"usage/#set-content-max-width","title":"Set content max width","text":"<p>You can specify max width of content depending on position using <code>max_[position](max_characters)</code>. <pre><code>    from termspark import TermSpark\n\n    termspark = TermSpark()\n    termspark.spark_left([\"LEFT\", \"red\"])\n    termspark.spark_right([\"RIGHT\", \"blue\"])\n    termspark.max_left(2)\n    termspark.max_right(3)\n    termspark.spark()\n</code></pre> This should show only \"LE\" on the left, and \"RIG\" on the right.</p> <p>[!WARNING] <code>max_[position]()</code> is only supported by sparkers.</p>"},{"location":"usage/#full-width","title":"Full width","text":"<p>You can enable full width by using <code>full_width()</code>.</p> <pre><code>    from termspark import TermSpark\n\n    termspark = TermSpark()\n    termspark.spark_center(['Thanks for using Termspark!', 'white', 'green'])\n    termspark.full_width()\n    termspark.spark()\n</code></pre> <p>[!WARNING] <code>full_width()</code> can only be used with one position.</p>"},{"location":"usage/#separator","title":"Separator","text":"<p>You can add color and highlight to separator too using <code>set_separator(content, color, highlight)</code>. <pre><code>termspark = TermSpark()\ntermspark.spark_left([' Author ', 'green'])\ntermspark.spark_right([' Faissal Wahabali ', 'green'])\ntermspark.set_separator('.', 'green')\ntermspark.spark()\n</code></pre> </p>"},{"location":"usage/#line_1","title":"Line","text":"<p>You can add highlight a line by using <code>line(highlight=highlight)</code>. <pre><code>termspark = TermSpark()\ntermspark.line(highlight='green')\ntermspark.spark()\n</code></pre> </p>"},{"location":"usage/#style","title":"Style","text":"<p>You can style your text by passing it to <code>print() style parameter</code> or to <code>spark([]) fourth list element</code>.</p> <p>Supported styles: - bold - dim - italic - overline - underline - curly underline - dotted underline - dashed underline - double underline - strike through - blink - reverse - hidden</p> <p>[!NOTE] You can mix styles by separating them by commas.</p> <p><pre><code>termspark = TermSpark()\ntermspark.print_center(' Termspark ', 'green', style='underline, overline, italic')\ntermspark.full_width()\ntermspark.spark()\n</code></pre> </p>"},{"location":"usage/#hyperlinks","title":"Hyperlinks","text":"<p>You can insert hyperlink using Markdown <code>[TEXT](LINK)</code>. <pre><code>termspark = TermSpark()\ntermspark.spark_left([\" Author \", \"green\"])\ntermspark.spark_right([\" [@faissaloux](https://github.com/faissaloux) \", \"green\"])\ntermspark.set_separator(\".\", \"green\")\ntermspark.spark()\n</code></pre> </p>"},{"location":"usage/#supported-colors","title":"Supported colors","text":"Color Name HEX black #000000 maroon #800000 green #008000 olive #808000 navy #000080 purple #800080 teal #008080 silver #C0C0C0 gray #808080 grey #808080 red #FF0000 lime #00FF00 yellow #FFFF00 blue #0000FF fuchsia #FF00FF aqua #00FFFF white #FFFFFF navy blue #00005F dark blue #000087 dark blue 2 #0000AF dark blue 1 #0000D7 dark green #005F00 blue stone #005F5F orient #005F87 endeavour #005FAF science blue #005FD7 blue ribbon #005FFF japanese laurel #008700 deep sea #00875F turquoise #008787 deep cerulean #0087AF lochmara #0087D7 azure radiance #0087FF islamic green #00AF00 spring green #00AF5F dark cyan #00AF87 light sea green #00AFAF cerulean #00AFD7 blue bolt #00AFFF electric green #00D700 malachite #00D75F caribbean green #00D787 cyan 1 #00D7AF dark turquoise #00D7D7 vivid sky blue #00D7FF electric green 1 #00FF00 guppie green #00FF5F spring green 1 #00FF87 medium spring green #00FFAF sea green #00FFD7 cyan #00FFFF rosewood #5F0000 pompadour #5F005F pigment indigo #5F0087 purple 3 #5F00AF electic violet #5F00D7 blue violet #5F00FF verdun green #5F5F00 scorpion #5F5F5F comet #5F5F87 scampi #5F5FAF indigo #5F5FD7 cornflower blue 1 #5F5FFF limeade #5F8700 glade green #5F875F juniper #5F8787 hippie blue #5F87AF havelock blue #5F87D7 cornflower blue #5F87FF limea #5FAF00 fern #5FAF5F silver tree #5FAF87 tradewind #5FAFAF shakespeare #5FAFD7 malibu #5FAFFF bright green #5FD700 pale green #5FD75F pastel green #5FD787 downy #5FD7AF viking #5FD7D7 steel blue #5FD7FF chartreuse #5FFF00 screaming green #5FFF5F sea green 1 #5FFF87 aquamarine 1 #5FFFAF aquamarine 2 #5FFFD7 aquamarine #5FFFFF dark red #870000 fresh eggplant #87005F dark magenta #870087 purple 2 #8700AF electric violet #8700D7 purple 1 #8700FF brown #875F00 copper rose #875F5F strike master #875F87 deluge #875FAF medium purple #875FD7 heliotrope #875FFF olive 1 #878700 clay creek #87875F gray 1 #878787 grey 1 #878787 wild blue yonder #8787AF chetwode blue #8787D7 light slate blue #8787FF limeade 1 #87AF00 chelsea cucumber #87AF5F bay leaf #87AF87 gulf stream #87AFAF polo blue #87AFD7 malibu 1 #87AFFF pistachio #87D700 dark olive green #87D75F feijoa #87D787 vista blue #87D7AF bermuda #87D7D7 anakiwa #87D7FF chartreuse 1 #87FF00 light green #87FF5F mint green #87FF87 pale green 1 #87FFAF aqua marine #87FFD7 anakiwa 1 #87FFFF bright red #AF0000 flirt #AF005F medium violet red #AF0087 magenta 1 #AF00AF dark violet #AF00D7 purple 4 #AF00FF rose of sharon #AF5F00 indian red #AF5F5F tapestry #AF5F87 fuchsia pink #AF5FAF medium purple 1 #AF5FD7 heliotrope 1 #AF5FFF pirate gold #AF8700 muesli #AF875F pharlap #AF8787 bouquet #AF87AF lavender #AF87D7 heliotrope 2 #AF87FF gold 1 #AFAF00 olive green #AFAF5F hillary #AFAF87 silver chalice #AFAFAF wistful #AFAFD7 melrose #AFAFFF rio grande #AFD700 conifer #AFD75F feijoa 1 #AFD787 pixie green #AFD7AF jungle mist #AFD7D7 anakiwa 2 #AFD7FF lime 1 #AFFF00 green yellow #AFFF5F mint green 1 #AFFF87 dark sea green #AFFFAF aero blue #AFFFD7 french pass #AFFFFF guardsman red #D70000 razzmatazz #D7005F hollywood cerise #D70087 hollywood cerise 1 #D700AF purple pizzazz #D700D7 electric violet 1 #D700FF tenn #D75F00 roman #D75F5F cranberry #D75F87 hopbush #D75FAF orchid #D75FD7 medium orchid #D75FFF mango tango #D78700 copperfield #D7875F pink #D78787 cancan #D787AF light orchid #D787D7 heliotrope 3 #D787FF corn #D7AF00 tacha #D7AF5F tan #D7AF87 clam shell #D7AFAF thistle #D7AFD7 mauve #D7AFFF corn 1 #D7D700 khaki #D7D75F deco #D7D787 green mist #D7D7AF alto #D7D7D7 fog #D7D7FF chartreuse yellow #D7FF00 canary #D7FF5F honeysuckle #D7FF87 reef #D7FFAF snowy mint #D7FFD7 oyster bay #D7FFFF rose #FF005F deep pink #FF0087 hollywood cerise 2 #FF00AF purple pizzazz 1 #FF00D7 magenta #FF00FF blaze orange #FF5F00 bitter sweet #FF5F5F wild watermelon #FF5F87 hotpink #FF5FAF hotpink 1 #FF5FD7 pink flamingo #FF5FFF flush orange #FF8700 salmon #FF875F vivid tangerine #FF8787 pink salmon #FF87AF lavender rose #FF87D7 blush pink #FF87FF yellow sea #FFAF00 texas rose #FFAF5F hit pink #FFAF87 sundown #FFAFAF cotton candy #FFAFD7 lavender rose 1 #FFAFFF gold #FFD700 dandelion #FFD75F grandis #FFD787 caramel #FFD7AF cosmos #FFD7D7 pink lace #FFD7FF laser lemon #FFFF5F dolly #FFFF87 portafino #FFFFAF cumulus #FFFFD7 cod gray #080808 cod gray 1 #121212 cod gray 2 #1C1C1C mine shaft #262626 mine shaft 1 #303030 mine shaft 2 #3A3A3A tundora #444444 tundora 1 #4E4E4E scorpion 1 #585858 dove gray #626262 dove gray 1 #6C6C6C boulder #767676 gray 2 #8A8A8A grey 2 #8A8A8A dusty gray #949494 silver chalice 1 #9E9E9E silver chalice 2 #A8A8A8 silver chalice 3 #B2B2B2 silver 1 #BCBCBC silver 2 #C6C6C6 alto 1 #D0D0D0 alto 2 #DADADA mercury #E4E4E4 gallery #EEEEEE"}]}